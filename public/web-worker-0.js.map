{"version":3,"file":"index.js","sources":["src/worker/Requests.js","src/worker/index.js"],"sourcesContent":["\r\nconst\t_self = self || window,\r\n\t\tserverBase = _self.serverBase || '//maps.kosmosnimki.ru/',\r\n\t\tserverProxy = serverBase + 'Plugins/ForestReport/proxy';\r\n\r\nlet loaderStatus = {};\r\nlet _sessionKeys = {};\r\nlet _app = {};\r\n\r\nconst parseURLParams = (str) => {\r\n\tlet sp = new URLSearchParams(str || location.search),\r\n\t\tout = {},\r\n\t\tarr = [];\r\n\tfor (let p of sp) {\r\n\t\tlet k = p[0], z = p[1];\r\n\t\tif (z) {\r\n\t\t\tif (!out[k]) {out[k] = [];}\r\n\t\t\tout[k].push(z);\r\n\t\t} else {\r\n\t\t\tarr.push(k);\r\n\t\t}\r\n\t}\r\n\treturn {main: arr, keys: out};\r\n};\r\n\r\nconst requestSessionKey = (serverHost, apiKey) => {\r\n\tlet keys = _sessionKeys;\r\n\tif (!(serverHost in keys)) {\r\n\t\tkeys[serverHost] = new Promise(function(resolve, reject) {\r\n\t\t\tif (apiKey) {\r\n\t\t\t\tutils.getJson({\r\n\t\t\t\t\turl: '//' + serverHost + '/ApiKey.ashx',\r\n\t\t\t\t\tparams: {WrapStyle: 'None', Key: apiKey}\r\n\t\t\t\t})\r\n\t\t\t\t\t.then(function(json) {\r\n\t\t\t\t\t\tlet res = json.res;\r\n\t\t\t\t\t\tif (res.Status === 'ok' && res.Result) {\r\n\t\t\t\t\t\t\tresolve(res.Result.Key !== 'null' ? '' : res.Result.Key);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treject(json);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(function() {\r\n\t\t\t\t\t\tresolve('');\r\n\t\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tresolve('');\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\treturn keys[serverHost];\r\n};\r\n\r\nconst getMapTree = (params) => {\r\n\tparams = params || {};\r\nconsole.log('parseURLParams', parseURLParams(params.search));\r\n\r\n\tlet url = `${serverBase}Map/GetMapFolder`;\r\n\turl += '?mapId=' + (params.mapId || 'C8612B3A77D84F3F87953BEF17026A5F');\r\n\turl += '&folderId=root';\r\n\turl += '&srs=3857'; \r\n\turl += '&skipTiles=All';\r\n\turl += '&visibleItemOnly=false';\r\n\r\n\tloaderStatus[url] = true;\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: 'get',\r\n\t\tmode: 'cors',\r\n\t\tcredentials: 'include',\r\n\t\t// headers: {'Accept': 'application/json'},\r\n\t\t// body: JSON.stringify(params)\t// TODO: сервер почему то не хочет работать так https://googlechrome.github.io/samples/fetch-api/fetch-post.html\r\n\t})\r\n\t\t.then(res => {\r\n\t\t\tdelete loaderStatus[url];\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.then(json => {\r\n\t\t\treturn parseTree(json);\r\n\t\t})\r\n\t\t.catch(err => console.warn(err));\r\n};\r\n\r\nconst _iterateNodeChilds = (node, level, out) => {\r\n\tlevel = level || 0;\r\n\tout = out || {\r\n\t\tlayers: []\r\n\t};\r\n\t\r\n\tif (node) {\r\n\t\tlet type = node.type,\r\n\t\t\tcontent = node.content,\r\n\t\t\tprops = content.properties;\r\n\t\tif (type === 'layer') {\r\n\t\t\tlet ph = { level: level, properties: props };\r\n\t\t\tif (content.geometry) { ph.geometry = content.geometry; }\r\n\t\t\tout.layers.push(ph);\r\n\t\t} else if (type === 'group') {\r\n\t\t\tlet childs = content.children || [];\r\n\t\t\tout.layers.push({ level: level, group: true, childsLen: childs.length, properties: props });\r\n\t\t\tchilds.map((it) => {\r\n\t\t\t\t_iterateNodeChilds(it, level + 1, out);\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t} else {\r\n\t\treturn out;\r\n\t}\r\n\treturn out;\r\n};\r\n\r\nconst parseTree = (json) => {\r\n\tlet out = {};\r\n\tif (json.Status === 'error') {\r\n\t\tout = json;\r\n\t} else if (json.Result && json.Result.content) {\r\n\t\tout = _iterateNodeChilds(json.Result);\r\n\t\tout.mapAttr = out.layers.shift();\r\n\t}\r\n// console.log('______json_out_______', out, json)\r\n\treturn out;\r\n};\r\nconst getReq = url => {\r\n\treturn fetch(url, {\r\n\t\t\tmethod: 'get',\r\n\t\t\tmode: 'cors',\r\n\t\t\tcredentials: 'include'\r\n\t\t// headers: {'Accept': 'application/json'},\r\n\t\t// body: JSON.stringify(params)\t// TODO: сервер почему то не хочет работать так https://googlechrome.github.io/samples/fetch-api/fetch-post.html\r\n\t\t})\r\n\t\t.then(res => res.json())\r\n\t\t.catch(err => console.warn(err));\r\n};\r\n\r\nconst getLayerItems = (params) => {\r\n\tparams = params || {};\r\n\r\n\tlet url = `${serverBase}VectorLayer/Search.ashx`;\r\n\turl += '?layer=' + params.layerID;\r\n\tif (params.id) { '&query=gmx_id=' + params.id; }\r\n\r\n\turl += '&out_cs=EPSG:4326';\r\n\turl += '&geometry=true';\r\n\treturn getReq(url);\r\n};\r\nconst getReportsCount = () => {\r\n\treturn getReq(serverProxy + '?path=/rest/v1/get-current-user-info');\r\n};\r\n\r\nexport default {\r\n\tparseURLParams,\r\n\tgetMapTree,\r\n\tgetReportsCount,\r\n\tgetLayerItems\r\n};","import Requests from './Requests.js';\r\n\r\nvar _self = self;\r\n(_self.on || _self.addEventListener).call(_self, 'message', e => {\r\n    const message = e.data || e;\r\nconsole.log('message ', e);\r\n    switch (message.cmd) {\r\n\t\tcase 'getLayerItems':\r\n\t\t\tRequests.getLayerItems({layerID: message.layerID}).then((json) => {\r\n\t\t\t\tmessage.out = json;\r\n\t\t\t\tlet pt = {};\r\n\t\t\t\tjson.Result.fields.forEach((name, i) => { pt[name] = i; });\r\n\t\t\t\tjson.Result.fieldKeys = pt;\r\n\t\t\t\t_self.postMessage(message);\r\n\t\t\t});\r\n\t\t\tbreak;\r\n\t\tcase 'getMap':\r\n\t\t\tRequests.getMapTree({mapId: message.mapID, search: message.search}).then((json) => {\r\n\t\t\t\tmessage.out = json;\r\n\t\t\t\t_self.postMessage(message);\r\n\t\t\t});\r\n\t\t\tbreak;\r\n\t\tcase 'getReportsCount':\r\n\t\t\tRequests.getReportsCount().then((json) => {\r\n\t\t\t\tmessage.out = json;\r\n\t\t\t\t_self.postMessage(message);\r\n\t\t\t});\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tconsole.warn('Неизвестная команда:', message.cmd);\r\n\t\t\tbreak;\r\n\t}\r\n});\r\n\r\n"],"names":["_self"],"mappings":"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"}